/*
 2022-09-29
[1단계:개념] 1. 명시적 형변환 함수 3가지를 기본 예제와 함께 기술하세요

		-to_char(컬럼/데이터, '변환형식')숫자/날짜 타입을 문자열로 변환해주는 함수이다.
 		-to_number(컬럼/데이터) : 날짜/문자 타입을 숫자로 변환해주는 함수
 		-to_date(컬럼/데이터) : 문자/숫자 타입을 날짜로 변환해주는 함수
 		*/
	SELECT to_char(sysdate,'YYYY')"char" ,
		   to_date('2022-12-31','YYYY-MM-DD') "date",
		   to_number('20221231') "number" 
		   FROM dual;
/*
[1단계:코드] 2. 2/4분기에 입사한 사원을 다음 양식으로 표현하세요
             @@@ -  @/4분기 공채입사자  @@월 @@째주 입사
             */
SELECT ename||'-'|| to_char(hiredate,'Q"/4분기 공채입사자" MM"월" WW"째주 입사"') show FROM emp;

			/*
[1단계:코드] 3. 분기별 입사자에게 급여의 30%,60%,90%,120%로 각가 보너스 금액을 산정할 때,
             입사자 분기 보너스(%) 급여 보너스 급여+보너스 를 출력하세요(decode,case문 사용X)
	1. 분기 처리 to_char(hiredate, 'Q') : 1,2,3,4 
	2. 보너스 표시 1, 2, 3, 4 * 30 ==> 30, 60, 90, 120
	3. 보너스 : sal*(1, 2, 3, 4) * 0.3 ==> 0.3, 0.6, 0.9, 1.2 
	4. 급여 + 보너스 : sal + 보너스  

  */
SELECT ename, 분기, sal, q*30||'%'"보너스(%)",sal*q*0.3 보너스,
		sal + (sal*q*0.3) "합산(급여+보너스)"
FROM (
	SELECT ename, sal, to_char(hiredate, 'Q') "분기", 
			to_number(to_char(hiredate, 'Q')) q	
	FROM emp
);
/*            
             
             
[1단계:개념] 4. 숫자 처리 기본형식을 예제와 함께 기술하세요.
1. 기본 형식 : to_char(숫자형 데이터,'형식')
 2. 주요 형식
 	해당 자리수 이상의 데이터가 처리 될 때는 ###으로 표시된다.
 	9999 : 기본 자리수에 맞게 처리
 	0000 : 해당 자리수 이하 일때는 0으로 채워짐
 	$ : 앞에 $ 표기 처리
 	. : 특정한 자리의 소숫점 표기 
 */
SELECT TO_CHAR(22222,'99999'),
	  TO_CHAR(22222,'0000000'),
	  TO_CHAR(22222,'99.999'),
	  TO_CHAR(22222,'$99999') 
FROM dual;
/*
[1단계:개념] 5. 명시적 형변환과 묵시적 형변환의 차이점을 기술하세요.
 	1) 묵시적 데이터 타입
 		조건문에서 정확하게 해당 type을 맞게 설정하지 않더라도 결과를 검색해주는
 		경우가 있는데 이것은 오라클 시스템 내부적으로 타입을 변환했기때문이다.
 		ex) select *
 			from emp
 			where sal>='2000';
 		문자열로 '2000'을 입력하더라도 시스템에서 연산을 인식하여 숫자로 자동형 변환 시켜 처리된다.
 	2) 명시적 데이터 타입
 		일반적으로 데이터 베이스는 변환함수를 이용하여 데이터 타입을 변환하여 
 		효과적으로 처리한다.
 		-to_char(컬럼/데이터, '변환형식')숫자/날짜 타입을 문자열로 변환해주는 함수이다.
 		-to_number(컬럼/데이터) : 날짜/문자 타입을 숫자로 변환해주는 함수
 		-to_date(컬럼/데이터) : 문자/숫자 타입을 날짜로 변환해주는 함수
 	ps)명시적 타입 변환을 통해서 서버의 판단에 무리를 주지 않고, index나 
 		기타 데이터 처리에 효율화를 줄 수 있다.

[1단계:코드] 6. 사원정보의 입사일에서 2000-01-01/2010-06-01/2020-12-31까지의 입사연한/개월 수를 표현하세요
			1) 문자열을 날짜형으로 변환 to_date ('2000-01-01','YYYY-MM-DD') "근무1"
			2) 전체 개월수 표시 months_between(기준날짜, hiredate)
			3) 근무연한 : floor(전체 개월수/12) - 나머지 개월수는 절삭처리 
			4) 근무연한을 뺀 근무개월수 : mof(전체 개월수, 12) -mod는 나머지를 
				처리하기에 몫은 근무연한을 빠지고, 나머지인 개월 수만 추출된다.
			
**/
SELECT ename, to_char(hiredate,'YYYY"년"MM"월"DD"일"')입사일, 
	floor(ch1/12)||'년'||mod(floor(ch1),12)||'개월' "2000-01-01까지 근무", 		
	floor(ch2/12)||'년'||mod(floor(ch2),12)||'개월' "2010-06-01까지 근무", 
	floor(ch3/12)||'년'||mod(floor(ch3),12)||'개월' "2020-12-31까지 근무"
FROM ( 
	SELECT ename, hiredate, 
	months_between(to_date('2000-01-01', 'YYYY-MM-DD'),hiredate) ch1,
	months_between(to_date('2010-06-01', 'YYYY-MM-DD'), hiredate) ch2,
	months_between(to_date('2020-12-31', 'YYYY-MM-DD'), hiredate) ch3
FROM emp);


/*
[1단계:개념] 7. null관련 함수를 기본 예제와 함께 기능을 기술하세요
1. nvl(데이터,null값일때 처리할 데이터)
 	해당 데이터가 null값일때, 처리할 데이터를 설정함으로 null에 대한 연산 처리
 	를 하는 것을 말한다. */
 	SELECT ename, sal, comm, nvl(comm,0)
	FROM emp;/*
2. nvl2(데이터,null이 아닐떄 처리, null일때 처리)
	comm이 null일때는 100, null이 아닐떄는 comm에서 10% 더 추가해서 
	결과값 처리*/
	SELECT ename, sal, comm, nvl2(comm,comm*1.1,100) "BONUS!!"
	FROM emp;/*
3. nullif(데이터1,데이터2)
	두 개의 매개변수로 받는 데이터를 비교하여 동일하면 null을 반환하고,
	동일하지 않으면 첫번째 데이터1을 반환하는 함수를 말한다.*/
	SELECT nullif('가','가') ex1,
		   nullif('가','나') ex2,
		   nullif(100, 200) ex3,
		   nvl(nullif('가','가'),'동일') ex4,
		   nvl(nullif('나','가'),'동일') ex5
	FROM dual;/*
	
[1단계:코드] 8. 회사에서 일괄보너스 지급 금액이 60이라고 정하는데, 연봉의 5%(10단위로 절삭)와 같으면 60, 다르면 연봉의 5%로 처리하는 sql을 작성하세요.
		1. 연봉의 5%를 10단위 처리: trunc(sal*0.05,-1)
		2. 기준 금액 60과 비교 처리 : nullif(연봉5%,60) 같으면 null, 다르면 연봉5%	
		3. 같으면 60, 다르면 5%로 : 
							nvl(데이터, null일때 처리) : 
											같으면(null) 특정한 데이터 처리, 다르면 연봉 5%처리
										    nvl(기준,60), 그렇지 않으면 연봉5%처리
							nvl2(데이터, null이 아닐때, null일때)
							
							
**
**/
SELECT ename, sal, trunc(sal*0.05,-1) "연봉의 5%",
		nullif(trunc(sal*0.05,-1),60) "60과 동일여부", --null이면 첫번째 데이터
		nvl(nullif(trunc(sal*0.05,-1),60),60)"최종 보너스"
		--null일때는 60을 처리, 그 외는 첫번째 데이터 보너스 최종 결정 처리
FROM emp;

SELECT ename, sal, comm,
nvl2(nullif(trunc(sal*0.05,-1),60),sal*0.05,60) "보너스" 
FROM emp;
/*
[1단계:코드] 9. 입사일의 분기(1~4)를 기준으로 출장으로 가기로 했다. 1: 부산,  2: 광주, 3:제주  4: 하와이 
                사원명, 입사일, 분기, 출장지 를 출력하세요
 */
SELECT ename 사원명, hiredate 입사일, to_char (hiredate,'Q') 입사분기, 
		decode (to_char(hiredate,'Q'),1,'부산',2,'광주',3,'제주',4,'하와이') 출장지 
FROM emp;
/*
[1단계:코드] 10. 급여의 구간별로 등급을 만들어, 사원번호, 이름, 급여, 등급을 출력하세요
                ex) 0~999 'A', 1000~2999 'B'...
                1) decode문 처리
                	등급 구간별로 데이터처리에 대한 규칙성 확인(사칙연산, mod), floor(), ceil()
                	sal/1000
                	1000단위로 나누어서 floor 
                	0~999 ==> 0, 1000~1999==>1, 2000~2999==>2,
               		3000~3999==>3 ... 
       				규칙성이 파악되면 해당 규칙성에 따라 decode를 처리.
                2) case문 처리
*/
SELECT ename, sal, sal/1000g1, floor(sal/1000) g2,
	decode(floor(sal/1000), 0,'A',
							1,'B',
							2,'C',
							3,'D',
							4,'E',
							5,'F',
							'등급범위벗어남') "등급"
FROM emp;
--decode문 급여 입력 범위 ???
--SELECT empno 사원번호, ename 이름, sal 급여, 
--	decode(sal,sal=5000,'A',sal=3000 ,'B','C')
--FROM emp;
SELECT empno 사원번호, ename 이름, sal 급여, 
	CASE WHEN sal>=5000 THEN 'A등급'
		 WHEN sal>=3000 AND sal<=4999 THEN 'B등급'
		 WHEN sal>=2000 AND sal<=2999 THEN 'C등급'
		 WHEN sal>=1000 AND sal<=1999 THEN 'D등급'
		 WHEN sal>=0 AND sal<=999 THEN 'F등급'
		 ELSE 'X'
		END 등급
FROM emp;

/*
== 평가대비(오라클) 객관식 문제 ==
1. 오라클의 to_char()이용하여 데이터 변환 타입이 아닌 것은?
1) 문자열 2) 숫자형 3) 불형 4) 날짜형
정답 ==> 3
숫자/날짜 타입을 문자열로 변환해주는 함수이다.


2. 문자열 형변환 형식이 적절하지 않는 것은?
1) 세기 - CC
2) 월 - MMM
3) 날짜 - D
4) 분기 - Q
정답 ==> 2 MM 

3. 빅데이터 처리 대상이 아닌 것은?
1) 저장기술
2) 분석기술
3) 표현기술
4) 실용기술
정답 ==> 4
빅데이터 처리 대상에 따른 분류로는 저장, 분석, 표현 세가지 기술이다.
4. DIKW 계층 구조에 해당하는 것이 아닌 것은?
1) 문서
2) 데이터
3) 정보
4) 지혜
정답 ==> 1
DIKW 계층 구조는 데이터 - 정보- 지식 -지혜 이다. 

5. 오라클에서 to_char(데이터,'옵션')으로 시간을 표현하는 옵션은 무엇인가?
1) YYYY
2) DAY
3) MI
4) Q
정답 ==> 3 
MI는 분을 뜻한다 시간 HH,HH24,HH12,MI,SS

정답 : 3,2,4,1,3
 */