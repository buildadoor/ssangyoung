/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-03 07:52:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.z02_005fkurlyproject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import jspexp.vo.*;
import javaexp.sql.*;
import jspexp.a13_database.*;
import jspexp.a13_database.vo.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("jspexp.a13_database.vo");
    _jspx_imports_packages.add("javaexp.sql");
    _jspx_imports_packages.add("jspexp.a13_database");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("jspexp.vo");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("@import url(a1_top.css);  \r\n");
      out.write("h2{text-align:center;}\r\n");
      out.write("td{\r\n");
      out.write("	font-size:20px;}\r\n");
      out.write("#bt{background:indigo;\r\n");
      out.write("	color:white;\r\n");
      out.write("	font-size:23px;\r\n");
      out.write("	margin-left:48%}\r\n");
      out.write("table{margin:0 auto;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function ckId(obj){\r\n");
      out.write("	var len = obj.value.length\r\n");
      out.write("	var spanOb = document.querySelector(\"#check\")\r\n");
      out.write("	var msg = \"4자~10자만 가능합니다.\"\r\n");
      out.write("	spanOb.style.color=\"red\"\r\n");
      out.write("	if(len>=4 && len<=10){\r\n");
      out.write("		msg = \"유효한 아이디입력\"\r\n");
      out.write("			spanOb.style.color=\"indigo\"\r\n");
      out.write("}\r\n");
      out.write("	spanOb.innerText = msg\r\n");
      out.write("}\r\n");
      out.write("function ckValid(){\r\n");
      out.write("	   var uname = document.querySelector(\"[name=uname]\")\r\n");
      out.write("	   var unameV = uname.value.trim();\r\n");
      out.write("	   var rrn = document.querySelector(\"[name=rrn]\")\r\n");
      out.write("	   var rrnV = rrn.value.trim();\r\n");
      out.write("	   var address = document.querySelector(\"[name=address]\")\r\n");
      out.write("	   var addressV = address.value.trim();\r\n");
      out.write("	   var id = document.querySelector(\"[name=id]\")\r\n");
      out.write("	   var idV = id.value.trim();\r\n");
      out.write("	   var password = document.querySelector(\"[name=password]\")\r\n");
      out.write("	   var passwordV = password.value.trim();\r\n");
      out.write("	   if(unameV==\"\"){\r\n");
      out.write("	      alert(\"이름은 필수사항입니다.\")\r\n");
      out.write("	      uname.focus()\r\n");
      out.write("	      return;\r\n");
      out.write("	   }\r\n");
      out.write("	   if(rrnV==\"\"){\r\n");
      out.write("	      alert(\"주민등록번호는 필수사항입니다.\")\r\n");
      out.write("	      rrn.focus()\r\n");
      out.write("	      return;\r\n");
      out.write("	   }\r\n");
      out.write("	   if(addressV==\"\"){\r\n");
      out.write("	      alert(\"주소는 필수사항입니다.\")\r\n");
      out.write("	      address.focus()\r\n");
      out.write("	      return;\r\n");
      out.write("	   }\r\n");
      out.write("	   if(idV==\"\"){\r\n");
      out.write("	      alert(\"아이디는 필수사항입니다.\")\r\n");
      out.write("	      id.focus()\r\n");
      out.write("	      return;\r\n");
      out.write("	   }\r\n");
      out.write("	   if(passwordV==\"\"){\r\n");
      out.write("	      alert(\"비밀번호는 필수사항입니다.\")\r\n");
      out.write("	      password.focus()\r\n");
      out.write("	      return;\r\n");
      out.write("	   }\r\n");
      out.write("	   document.querySelector(\"form\").submit();\r\n");
      out.write("	}\r\n");
      out.write("    </script>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write(" \r\n");
      out.write("<br><br><br>\r\n");
      out.write("<form >\r\n");
      out.write("</form>\r\n");
      out.write("<b><br><br><h2>회원가입</h2></b><br><hr>\r\n");
      out.write("<form method=\"post\" action=\"a.jsp\">\r\n");
      out.write("<table><tr><td>\r\n");
      out.write("	아이디</td><td><input type=\"text\" name=\"id\" onkeyup=\"ckId(this)\" placeholder=\"아이디를 입력하세요\"/>\r\n");
      out.write("		<input type=\"submit\" value=\"중복여부\" />\r\n");
      out.write("		<span id=\"check\"></span><br>\r\n");
      out.write("</form></td></tr>\r\n");
      out.write("<tr><td>비밀번호</td><td><input type=\"password\" name=\"password\" placeholder=\"비밀번호를 입력하세요\"></td></tr>\r\n");
      out.write("<tr><td>이름</td><td><input type=\"text\" name=\"uname\" placeholder=\"이름을 입력하세요\"></td></tr>\r\n");
      out.write("<tr><td>주민등록번호</td><td><input type=\"text\" name=\"rrn\" placeholder=\"'-'을 포함하여 입력하세요\" ></td></tr>\r\n");
      out.write("<tr><td>핸드폰번호</td><td><input type=\"text\" name=\"phonenumber\" placeholder=\"'-'을 포함하여 입력하세요\"></td></tr>\r\n");
      out.write("<tr><td>주소</td><td><input type=\"text\" name=\"address\" placeholder=\"주소를 입력하세요\"></td></tr>\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<input type=\"submit\" value=\"회원가입\" onclick=\"ckValid()\" id=\"bt\"><br>\r\n");

String hasId = (String)request.getAttribute("hasId");
boolean isCheck = false;
if(hasId!=null){
		isCheck = true;
}
String id = request.getParameter("id");

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var isCheck = ");
      out.print(isCheck);
      out.write("\r\n");
      out.write("if(isCheck){\r\n");
      out.write("	var hasId = \"");
      out.print(hasId);
      out.write("\"\r\n");
      out.write("	if(hasId==\"Y\"){\r\n");
      out.write("		alert(\"등록된 아이디가 있습니다.\");\r\n");
      out.write("	}else{\r\n");
      out.write("		alert(\"등록 가능한 아이디입니다.\");\r\n");
      out.write("		document.querySelector(\"[name=id]\").value=\"");
      out.print(id);
      out.write("\"\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");

String uname = request.getParameter("uname"); 
String rrn = request.getParameter("rrn");
String address = request.getParameter("address");
String phonenumber = request.getParameter("phonenumber");
String id2 = request.getParameter("id");
String password = request.getParameter("password");
String pointS = request.getParameter("point");
int point = 0;
String div = "회원";

boolean isInsert = false;
if(id!=null&& !id.equals("")){
   User ins = new User(div, uname, rrn, address, phonenumber, id, password);
  Join dao = new Join();
   dao.insertKurlyuser(ins);
   isInsert = true;
}


      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
