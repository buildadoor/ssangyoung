<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>구구단</title>
    <!-- vue.js 웹 모듈 -->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>

<body>
    <div id="root">
        <div> {{firstNum}} X {{secondNum}} = ???</div>
        <form v-on:submit="onSubmitForm">
            <!-- ref 를 통하여 태그에 이름을 줘서 접근할 것이다. input 의 이름은 answer가 되었다.(vue가 부를때) -->
            <input type="number" ref="answer" v-model="value" /> <!-- v-model => vue와 html 바인딩!! data value를 input 과 연결 -->
            <button type="submit">입력</button>
        </form>
        <div id="result">{{result}}</div>
    </div>
</body>

    <script>
        const app = new Vue({
           el: '#root',
           data: {
               firstNum: Math.ceil(Math.random() * 9), // 1~9까지의 숫자 랜덤
               secondNum:Math.ceil(Math.random() * 9),
               value:'',
               result:'',
           },
           methods:{
               onSubmitForm(e){
                   e.preventDefault(); //form의 기능을 막기 위함( 새로고침!! )
                   if(this.firstNum * this.secondNum === parseInt(this.value)){
                       this.result = '정답입니다.!!';

                       this.firstNum = Math.ceil(Math.random() * 9);
                       this.secondNum = Math.ceil(Math.random() * 9);
                       this.value = '';

                       this.$refs.answer.focus();
                   } else {
                       this.result = '틀렸어요..';
                       this.value = '';

                       this.$refs.answer.focus(); // document.querySelect~~이런 느낌의 ref 이다.
                                                    // data 로 접근이 힘들 경우에만 ref를 활용, 항상 data 를 바꿔주는 걸로 생각해야한다.
                   }
               },
           },
        });
    </script>

</html>